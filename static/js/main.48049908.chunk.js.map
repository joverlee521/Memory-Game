{"version":3,"sources":["components/LandingPage/index.js","components/Navbar/index.js","components/CardsWrapper/index.js","components/MessageWrapper/index.js","components/ImageCard/index.js","components/Footer/index.js","App.js","index.js"],"names":["LandingPage","props","react_default","a","createElement","className","src","concat","process","alt","onClick","startGame","NavBar","message","winLose","id","score","topScore","CardsWrapper","children","MessageWrapper","image","restart","type","ImageCard","clickState","character","name","Footer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","start","updateScore","clickedArray","currentScore","state","length","characters","updateTopScore","clicked","currentTopScore","resetGame","includes","push","renderCharacters","shuffle","map","components_ImageCard","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","content","components_MessageWrapper","components_CardsWrapper","Navbar","components_Footer","components_LandingPage","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.48049908.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction LandingPage(props){\n    return(\n        <div className=\"jumbotron jumbotron-fluid custom-jumbo\">\n            <h1 className=\"display-4\">Welcome To</h1>\n            <img className=\"landing-img\" src={`${process.env.PUBLIC_URL}/images/my-hero-logo.png`} alt=\"My Hero Academia\" />\n            <h1 className=\"display-4\">Memory Game!</h1>\n            <hr></hr>\n            <h3>Click on an image to earn points, but don't click on any more than once!</h3>\n            <hr></hr>\n            <button onClick={props.startGame} className=\"btn btn-danger\">Start Game!</button>\n        </div>\n    );\n}\n\nexport default LandingPage;","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props){\n    const winLose = props.winLose;\n    let message;\n    if(winLose === \"win\"){\n        message = \"You Win!\"\n    }\n    else if(winLose === \"lose\"){\n        message = \"You Lost!\"\n    }\n    else{\n        message = \"Click an image to start!\"\n    }\n    return(\n        <ul className=\"nav sticky-top justify-content-between align-items-center flex-lg-row flex-column px-3\">\n            <li className=\"nav-item\">\n                <img src={`${process.env.PUBLIC_URL}/images/my-hero-logo.png`} id=\"nav-img\" alt=\"My Hero Academia\"/>\n            </li>\n            <li className=\"nav-item text-white h3\">\n                {message}\n            </li>\n            <li className=\"nav-item text-white h4\">Score: {props.score} | Top Score: {props.topScore}</li>\n        </ul>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction CardsWrapper(props){\n    return <div className=\"container card-wrapper\">{props.children}</div>\n}\n\nexport default CardsWrapper;","import React from \"react\";\nimport \"./style.css\"\n\nfunction MessageWrapper(props){\n    const winLose = props.winLose;\n    let image;\n    if(winLose === \"win\"){\n        image = <img src={`${process.env.PUBLIC_URL}/images/win.gif`} alt=\"Win GIF\"/>\n    }\n    else if(winLose === \"lose\"){\n        image = <img src={`${process.env.PUBLIC_URL}/images/lose.gif`} alt=\"Lose GIF\"/>\n    }\n    return(\n        <div className=\"messageWrapper\">\n            {image}\n            <button onClick={props.restart}type=\"button\" className=\"btn btn-primary my-3\">Restart Game</button>\n        </div>\n    )\n}\n\nexport default MessageWrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props){\n    return(\n        <div className=\"card character-card\" onClick={() => props.clickState(props.character.id)}>\n            <img className=\"card-img img-custom\" src={`${process.env.PUBLIC_URL}` + props.character.image} alt={props.character.name}/>\n        </div>\n    );\n}\n\nexport default ImageCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(){\n    return(\n        <footer>\n            <div className=\"row\">\n                <div className=\"col\">\n                    \n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport LandingPage from \"./components/LandingPage\";\nimport NavBar from \"./components/Navbar\";\nimport CardsWrapper from \"./components/CardsWrapper\";\nimport MessageWrapper from \"./components/MessageWrapper\";\nimport ImageCard from \"./components/ImageCard\";\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\nimport \"./App.css\"\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      start: false,\n      score: 0,\n      topScore: 0,\n      clicked: [],\n      winLose: \"\"\n    }\n  }\n\n  startGame = () => {\n    this.setState({start: true});\n  }\n\n  updateScore = (clickedArray) => {\n    let currentScore = this.state.score;\n    currentScore++;\n    this.setState({score: currentScore}, () => {\n      if(clickedArray.length === characters.length){\n        this.updateTopScore();\n        this.setState({winLose: \"win\", clicked: []});\n      }\n      else{\n        this.setState({clicked: clickedArray});\n      }\n    });\n  }\n\n  updateTopScore = () => {\n    let currentScore = this.state.score;\n    let currentTopScore = this.state.topScore;\n    if(currentScore > currentTopScore){\n      currentTopScore = currentScore;\n      this.setState({topScore: currentTopScore});\n    }\n    this.setState({score: 0});\n  }\n\n  resetGame = () => {\n    this.setState({winLose: \"\"});\n  }\n\n  clickState = id => {\n    const clickedArray = this.state.clicked;\n    if(clickedArray.includes(id)){\n      this.updateTopScore();\n      this.setState({winLose: \"lose\", clicked: []})\n    }\n    else{\n      clickedArray.push(id);\n      this.updateScore(clickedArray);\n    }\n  }\n\n  shuffle(array) {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  renderCharacters = () => {\n    const shuffledCharacters = this.shuffle(characters);\n    return shuffledCharacters.map(character => <ImageCard character={character} clickState={this.clickState}/>);\n  }\n\n  render() {\n    if(this.state.start){\n    let content;\n    if(this.state.winLose === \"win\" || this.state.winLose === \"lose\"){\n      content = <MessageWrapper winLose={this.state.winLose} restart={this.resetGame}/>\n    }\n    else{\n      content = <CardsWrapper>{this.renderCharacters()}</CardsWrapper>\n    }\n    return (\n      <div className=\"wrapper\">\n        <NavBar score={this.state.score} topScore={this.state.topScore} winLose={this.state.winLose}/>\n        <div className=\"content\">\n          {content}\n        </div>\n        <Footer />\n      </div>\n    );\n    }\n    else{\n      return(\n        <LandingPage startGame={this.startGame}/>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}